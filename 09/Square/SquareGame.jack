// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/09/Square/SquareGame.jack

/**
 * Implements the Square Dance game.
 * In this game you can move a black square around the screen and
 * change its size during the movement.
 * In the beginning, the square is located at the top-left corner
 * of the screen. The arrow keys are used to move the square.
 * The 'z' & 'x' keys are used to decrement and increment the size.
 * The 'q' key is used to quit the game.
 */
class SquareGame {

    // The square
    field Square square;

    // The square's movement direction
    field int direction; // 0=none,1=up,2=down,3=left,4=right

    field int sX;
    field int sSize;

    field int score;
    /** Constructs a new Square Game. */
    constructor SquareGame new() {
        let score = 0;
        //draw lines for score areas
        do Screen.setColor(true);
        do Screen.drawLine(250,0,250,255);

        let square = Square.new(5, 240, 15);
        let direction = 0;

        return this;
    }

    /** Deallocates the object's memory. */
    method void dispose() {
        do square.dispose();
        do Memory.deAlloc(this);
        return;
    }

    /** Starts the game. Handles inputs from the user that control
     *  the square's movement, direction and size. */
    method void run() {

        var char key;
        var boolean exit;
        let exit = false;
        while (~exit) {
            do Output.printString("Score: ");
            do Output.printInt(score);
            // waits for a key to be pressed.
            while (key = 0) {
                let key = Keyboard.keyPressed();
                do moveSquare();
            }

            if (key = 81) {
                let exit = true;
            }
            if (key = 130) {
                let direction = 3;
            }
            if (key = 132) {
                let direction = 4;
            }

            // waits for the key to be released.
            while (~(key = 0)) {
                let key = Keyboard.keyPressed();
                do moveSquare();
            }
            do edgeDetect();
        }
       
            
        return;
	}

    /** Moves the square by 2 pixels in the current direction. */
    method void moveSquare() {

        if (direction = 3) {
            do square.moveLeft();
        }
        if (direction = 4) {
            do square.moveRight();
        }

        do Sys.wait(5); // Delays the next movement.
        return;
    }

    method void edgeDetect() {
        let sX = square.getX();
        let sSize = square.getSize();

        if (sX < 1) {
            let score = 0;
        }
        if (sX+sSize > 510) {
            let score = 0;
        }
        return;
    }
    method void printScore() {
        return;
    }
}
